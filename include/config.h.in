#ifndef CONFIG_H
#define CONFIG_H

/* On Darwin, it seems like htonll and ntohll are imported with libc */
#ifndef __APPLE__

#if __BYTE_ORDER == __BIG_ENDIAN
#define ntohll(x) (x)
#define htonll(x) (x)
#elif __BYTE_ORDER == __LITTLE_ENDIAN
#define bswap_64(x)\
	((((x) & 0xff00000000000000ull) >> 56)\
	| (((x) & 0x00ff000000000000ull) >> 40)\
	| (((x) & 0x0000ff0000000000ull) >> 24)\
	| (((x) & 0x000000ff00000000ull) >> 8)\
	| (((x) & 0x00000000ff000000ull) << 8)\
	| (((x) & 0x0000000000ff0000ull) << 24)\
	| (((x) & 0x000000000000ff00ull) << 40)\
	| (((x) & 0x00000000000000ffull) << 56))
#define ntohll(x) bswap_64(x)
#define htonll(x) bswap_64(x)
#else
#error "Unsupported machine word endianness"
#endif

#endif

#ifndef NDEBUG
/**
 * Macro specifiying whether or not we should deallocate memory when exiting.
 * Deactivated when #NDEBUG is set.
 */
#define CONFIG_FULL_CLEANUP
#endif

/**
 * Macro specifiying where to look for daemons init files.
 */
#define CONFIG_CONFIGURATION_DIRECTORY "@CONFIG_CONFIGURATION_DIRECTORY@"
/**
 * Macro specifiying where to create endpoints.
 */
#define CONFIG_ENDPOINTS_DIRECTORY "@CONFIG_ENDPOINTS_DIRECTORY@"

/**
 * Macro specifiying the name of the first endpoint to be created.
 */
#define CONFIG_ENDPOINTS_ROOT "@CONFIG_ENDPOINTS_ROOT@"

/**
 * Macro specifiying the maximum connections cyberd can hold at one time.
 */
#define CONFIG_ENDPOINTS_CONNECTIONS @CONFIG_ENDPOINTS_CONNECTIONS@

/**
 * Macro specifiying the default capacity of the buffer holding pathnames while parsing endpoints.
 */
#define CONFIG_CONNECTIONS_NAME_BUFFER_DEFAULT_CAPACITY @CONFIG_CONNECTIONS_NAME_BUFFER_DEFAULT_CAPACITY@

/**
 * Macro specifiying the size of the buffer used to read from endpoints.
 */
#define CONFIG_CONNECTIONS_READ_BUFFER_SIZE @CONFIG_CONNECTIONS_READ_BUFFER_SIZE@

/**
 * Macro specifiying the default umask for daemons.
 */
#define CONFIG_DAEMONS_DEFAULT_UMASK @CONFIG_DAEMONS_DEFAULT_UMASK@

/* CONFIG_H */
#endif
