#!/bin/sh

CONFIG_DEBUG=1

while getopts h opt
do
	case $opt in
	h) cat <<EOF
\`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [-h] [-r|-d] [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h                      display this help and exit

Optional Features:
  -d                      configure a debug build (default)
  -r                      configure a release build

Some influential environment variables:
  NAME            cyber{d,ctl} executables name [cyber]

  CC              C compiler command [cc]
  CFLAGS          C compiler flags [-O3 -Wall -fPIC] when -r specified, [-g -Wall -fPIC] else
  LDFLAGS         linker flags []

  DAEMONCONFS     where will daemon configurations be set [/etc/daemons] when -r specified, [./test/cyberd/daemons] else
  IPCSOCKETS      where will IPC sockets be created [/var/init] when -r specified, [./test/cyberd] else

  PREFIX          where to install files [/usr/local]
  BINDIR          where to install executables [\$PREFIX/bin]
  MANDIR          where to install manpages [\$PREFIX/man]
  BUILDDIR        where the binaries and documentations will be built [./build]

Use these variables to override the choices made by \`configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
EOF
		exit 2 ;;
	r) unset CONFIG_DEBUG ;;
	d) CONFIG_DEBUG=1 ;;
	?) echo "Unknown option: $opt" ;;
	esac
done

shift $((OPTIND - 1))
[ ! -z "$*" ] && export $*

# Generic
[ -z "$NAME" ] && NAME='cyber'

# Compilation
if [ -z "$CC" ]
then
	for CC in clang gcc cc
	do [ ! -z `which "$CC"` ] && break
	done
fi

if [ ! -z "$CC" ]
then echo "Using C compiler '$CC'"
else echo "Unable to find C compiler" ; exit 1
fi

if [ -z "$CFLAGS" ]
then
	if [ ! -z "$CONFIG_DEBUG" ]
	then CFLAGS='-g -Wall -fPIC'
	else CFLAGS='-O3 -Wall -fPIC'
	fi
fi
[ ! -z "$CONFIG_DEBUG" ] && CFLAGS="$CFLAGS -DCONFIG_DEBUG"
echo "Using C flags '$CFLAGS'"

echo "Using Linker flags: '$LDFLAGS'"

if [ -z "$DAEMONCONFS" ]
then
	if [ ! -z "$CONFIG_DEBUG" ]
	then DAEMONCONFS='./test/cyberd/daemons'
	else DAEMONCONFS='/etc/daemons'
	fi
fi

if [ -z "$IPCSOCKETS" ]
then
	if [ ! -z "$CONFIG_DEBUG" ]
	then IPCSOCKETS='./test/cyberd'
	else IPCSOCKETS='/var/init'
	fi
fi

# Install
[ -z "$PREFIX" ] && PREFIX='/usr/local'
[ -z "$BINDIR" ] && BINDIR="$PREFIX/bin"
[ -z "$MANDIR" ] && MANDIR="$PREFIX/man"
[ -z "$BUILDDIR" ] && BUILDDIR='./build'

cat - Makefile.part <<EOF > Makefile
NAME=$NAME

CC=$CC
CFLAGS=$CFLAGS
LDFLAGS=$LDFLAGS

BUILDDIR=$BUILDDIR

INSTALLBINDIR=$BINDIR
INSTALLMANDIR=$MANDIR
INSTALLDIRS=\$(INSTALLBINDIR) \$(INSTALLMANDIR)
EOF

cat <<EOF > src/config.h
#ifndef CONFIG_H
#define CONFIG_H

#ifdef CONFIG_DEBUG
#define CONFIG_STDOUT_LOG 1
#define CONFIG_FULL_CLEANUP 1
#endif

#define CONFIG_DAEMONCONFS_DIRECTORY "$DAEMONCONFS"
#define CONFIG_CONTROLLERS_DIRECTORY "$IPCSOCKETS"
#define CONFIG_INITCTL_PATH CONFIG_CONTROLLERS_DIRECTORY"/initctl"

#define CONFIG_DEFAULT_UMASK 022

#define CONFIG_CONNECTIONS_LIMIT 64
#define CONFIG_MAX_ACCEPTOR_LEN 255

#define CONFIG_READ_BUFFER_SIZE 512

/* CONFIG_H */
#endif
EOF

